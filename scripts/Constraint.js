// Generated by CoffeeScript 1.8.0
this.Constraint = (function() {
  function Constraint(a, b, options) {
    var _ref, _ref1;
    this.a = a;
    this.b = b;
    constraints.push(this);
    things.push(this);
    if (this.length == null) {
      this.length = (_ref = options != null ? options.length : void 0) != null ? _ref : distance(this.a, this.b);
    }
    if (this.force == null) {
      this.force = (_ref1 = options != null ? options.force : void 0) != null ? _ref1 : 1;
    }
    this.color = "white";
  }

  Constraint.prototype.update = function() {
    var d, divisor, dx, dy, f, fx, fy;
    dx = this.a.x - this.b.x;
    dy = this.a.y - this.b.y;
    d = sqrt(dx * dx + dy * dy);
    divisor = d < 1 ? 1 : d;
    f = this.force / 10;
    fx = dx / divisor * ((this.length - d) * f);
    fy = dy / divisor * ((this.length - d) * f);
    this.a.fx += fx;
    this.a.fy += fy;
    this.b.fx -= fx;
    return this.b.fy -= fy;
  };

  Constraint.prototype.draw = function() {
    ctx.line(this.a, this.b);
    return ctx.stroke(this.color);
  };

  return Constraint;

})();
